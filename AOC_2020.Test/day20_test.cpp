#include "pch.h"
#include "CppUnitTest.h"
#include <string>
#include <list>
#include "../day.h"
#include "../day20.h"
#include "../input.h"

using namespace Microsoft::VisualStudio::CppUnitTestFramework;
using namespace std;

namespace AOC2020Test
{
	TEST_CLASS(Day20Test)
	{
		Input io;
		Day20 day;
	public:
		TEST_METHOD(partOneTest)
		{
			string input_arr[] = {
				"Tile 2311:",
				"..##.#..#.",
				"##..#.....",
				"#...##..#.",
				"####.#...#",
				"##.##.###.",
				"##...#.###",
				".#.#.#..##",
				"..#....#..",
				"###...#.#.",
				"..###..###",
				"",
				"Tile 1951:",
				"#.##...##.",
				"#.####...#",
				".....#..##",
				"#...######",
				".##.#....#",
				".###.#####",
				"###.##.##.",
				".###....#.",
				"..#.#..#.#",
				"#...##.#..",
				"",
				"Tile 1171:",
				"####...##.",
				"#..##.#..#",
				"##.#..#.#.",
				".###.####.",
				"..###.####",
				".##....##.",
				".#...####.",
				"#.##.####.",
				"####..#...",
				".....##...",
				"",
				"Tile 1427:",
				"###.##.#..",
				".#..#.##..",
				".#.##.#..#",
				"#.#.#.##.#",
				"....#...##",
				"...##..##.",
				"...#.#####",
				".#.####.#.",
				"..#..###.#",
				"..##.#..#.",
				"",
				"Tile 1489:",
				"##.#.#....",
				"..##...#..",
				".##..##...",
				"..#...#...",
				"#####...#.",
				"#..#.#.#.#",
				"...#.#.#..",
				"##.#...##.",
				"..##.##.##",
				"###.##.#..",
				"",
				"Tile 2473:",
				"#....####.",
				"#..#.##...",
				"#.##..#...",
				"######.#.#",
				".#...#.#.#",
				".#########",
				".###.#..#.",
				"########.#",
				"##...##.#.",
				"..###.#.#.",
				"",
				"Tile 2971:",
				"..#.#....#",
				"#...###...",
				"#.#.###...",
				"##.##..#..",
				".#####..##",
				".#..####.#",
				"#..#.#..#.",
				"..####.###",
				"..#.#.###.",
				"...#.#.#.#",
				"",
				"Tile 2729:",
				"...#.#.#.#",
				"####.#....",
				"..#.#.....",
				"....#..#.#",
				".##..##.#.",
				".#.####...",
				"####.#.#..",
				"##.####...",
				"##..#.##..",
				"#.##...##.",
				"",
				"Tile 3079:",
				"#.#.#####.",
				".#..######",
				"..#.......",
				"######....",
				"####.#..#.",
				".#...#.##.",
				"#.#####.##",
				"..#.###...",
				"..#.......",
				"..#.###..."
			};
			list<string> input(begin(input_arr), end(input_arr));
			Assert::AreEqual((uint64_t)20899048083289, day.part_one(input));
		}

		TEST_METHOD(partOne)
		{
			list<string> input = io.read_lines("Day20");
			Assert::AreEqual((uint64_t)174206308298779, day.part_one(input));
		}

		TEST_METHOD(partTwoTest)
		{
			string input_arr[] = {
				"Tile 2311:",
				"..##.#..#.",
				"##..#.....",
				"#...##..#.",
				"####.#...#",
				"##.##.###.",
				"##...#.###",
				".#.#.#..##",
				"..#....#..",
				"###...#.#.",
				"..###..###",
				"",
				"Tile 1951:",
				"#.##...##.",
				"#.####...#",
				".....#..##",
				"#...######",
				".##.#....#",
				".###.#####",
				"###.##.##.",
				".###....#.",
				"..#.#..#.#",
				"#...##.#..",
				"",
				"Tile 1171:",
				"####...##.",
				"#..##.#..#",
				"##.#..#.#.",
				".###.####.",
				"..###.####",
				".##....##.",
				".#...####.",
				"#.##.####.",
				"####..#...",
				".....##...",
				"",
				"Tile 1427:",
				"###.##.#..",
				".#..#.##..",
				".#.##.#..#",
				"#.#.#.##.#",
				"....#...##",
				"...##..##.",
				"...#.#####",
				".#.####.#.",
				"..#..###.#",
				"..##.#..#.",
				"",
				"Tile 1489:",
				"##.#.#....",
				"..##...#..",
				".##..##...",
				"..#...#...",
				"#####...#.",
				"#..#.#.#.#",
				"...#.#.#..",
				"##.#...##.",
				"..##.##.##",
				"###.##.#..",
				"",
				"Tile 2473:",
				"#....####.",
				"#..#.##...",
				"#.##..#...",
				"######.#.#",
				".#...#.#.#",
				".#########",
				".###.#..#.",
				"########.#",
				"##...##.#.",
				"..###.#.#.",
				"",
				"Tile 2971:",
				"..#.#....#",
				"#...###...",
				"#.#.###...",
				"##.##..#..",
				".#####..##",
				".#..####.#",
				"#..#.#..#.",
				"..####.###",
				"..#.#.###.",
				"...#.#.#.#",
				"",
				"Tile 2729:",
				"...#.#.#.#",
				"####.#....",
				"..#.#.....",
				"....#..#.#",
				".##..##.#.",
				".#.####...",
				"####.#.#..",
				"##.####...",
				"##..#.##..",
				"#.##...##.",
				"",
				"Tile 3079:",
				"#.#.#####.",
				".#..######",
				"..#.......",
				"######....",
				"####.#..#.",
				".#...#.##.",
				"#.#####.##",
				"..#.###...",
				"..#.......",
				"..#.###..."
			};
			list<string> input(begin(input_arr), end(input_arr));
			Assert::AreEqual((uint64_t)273, day.part_two(input));
		}

		TEST_METHOD(partTwo)
		{
			list<string> input = io.read_lines("Day20");
			Assert::AreEqual((uint64_t)2409, day.part_two(input));
		}
	};
}
